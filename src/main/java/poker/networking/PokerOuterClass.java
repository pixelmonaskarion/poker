// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: poker.proto

package poker.networking;

public final class PokerOuterClass {
  private PokerOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ChoiceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.Choice)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>int32 choice = 2;</code>
     */
    int getChoice();

    /**
     * <code>int32 newBet = 3;</code>
     */
    int getNewBet();
  }
  /**
   * Protobuf type {@code poker.networking.Choice}
   */
  public  static final class Choice extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.Choice)
      ChoiceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Choice.newBuilder() to construct.
    private Choice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Choice() {
      id_ = 0;
      choice_ = 0;
      newBet_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Choice(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 16: {

              choice_ = input.readInt32();
              break;
            }
            case 24: {

              newBet_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Choice_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Choice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.Choice.class, poker.networking.PokerOuterClass.Choice.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int CHOICE_FIELD_NUMBER = 2;
    private int choice_;
    /**
     * <code>int32 choice = 2;</code>
     */
    public int getChoice() {
      return choice_;
    }

    public static final int NEWBET_FIELD_NUMBER = 3;
    private int newBet_;
    /**
     * <code>int32 newBet = 3;</code>
     */
    public int getNewBet() {
      return newBet_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (choice_ != 0) {
        output.writeInt32(2, choice_);
      }
      if (newBet_ != 0) {
        output.writeInt32(3, newBet_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (choice_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, choice_);
      }
      if (newBet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, newBet_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.Choice)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.Choice other = (poker.networking.PokerOuterClass.Choice) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getChoice()
          == other.getChoice());
      result = result && (getNewBet()
          == other.getNewBet());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + CHOICE_FIELD_NUMBER;
      hash = (53 * hash) + getChoice();
      hash = (37 * hash) + NEWBET_FIELD_NUMBER;
      hash = (53 * hash) + getNewBet();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.Choice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Choice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Choice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Choice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.Choice prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.Choice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.Choice)
        poker.networking.PokerOuterClass.ChoiceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Choice_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Choice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.Choice.class, poker.networking.PokerOuterClass.Choice.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.Choice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        choice_ = 0;

        newBet_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Choice_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Choice getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.Choice.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Choice build() {
        poker.networking.PokerOuterClass.Choice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Choice buildPartial() {
        poker.networking.PokerOuterClass.Choice result = new poker.networking.PokerOuterClass.Choice(this);
        result.id_ = id_;
        result.choice_ = choice_;
        result.newBet_ = newBet_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.Choice) {
          return mergeFrom((poker.networking.PokerOuterClass.Choice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.Choice other) {
        if (other == poker.networking.PokerOuterClass.Choice.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getChoice() != 0) {
          setChoice(other.getChoice());
        }
        if (other.getNewBet() != 0) {
          setNewBet(other.getNewBet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.Choice parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.Choice) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int choice_ ;
      /**
       * <code>int32 choice = 2;</code>
       */
      public int getChoice() {
        return choice_;
      }
      /**
       * <code>int32 choice = 2;</code>
       */
      public Builder setChoice(int value) {
        
        choice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 choice = 2;</code>
       */
      public Builder clearChoice() {
        
        choice_ = 0;
        onChanged();
        return this;
      }

      private int newBet_ ;
      /**
       * <code>int32 newBet = 3;</code>
       */
      public int getNewBet() {
        return newBet_;
      }
      /**
       * <code>int32 newBet = 3;</code>
       */
      public Builder setNewBet(int value) {
        
        newBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 newBet = 3;</code>
       */
      public Builder clearNewBet() {
        
        newBet_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.Choice)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.Choice)
    private static final poker.networking.PokerOuterClass.Choice DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.Choice();
    }

    public static poker.networking.PokerOuterClass.Choice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Choice>
        PARSER = new com.google.protobuf.AbstractParser<Choice>() {
      @java.lang.Override
      public Choice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Choice(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Choice> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Choice> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.Choice getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JoinRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.JoinRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string player_name = 1;</code>
     */
    java.lang.String getPlayerName();
    /**
     * <code>string player_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    /**
     * <code>string ip = 2;</code>
     */
    java.lang.String getIp();
    /**
     * <code>string ip = 2;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();
  }
  /**
   * Protobuf type {@code poker.networking.JoinRequest}
   */
  public  static final class JoinRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.JoinRequest)
      JoinRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JoinRequest.newBuilder() to construct.
    private JoinRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JoinRequest() {
      playerName_ = "";
      ip_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JoinRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              playerName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.JoinRequest.class, poker.networking.PokerOuterClass.JoinRequest.Builder.class);
    }

    public static final int PLAYER_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object playerName_;
    /**
     * <code>string player_name = 1;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playerName_ = s;
        return s;
      }
    }
    /**
     * <code>string player_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IP_FIELD_NUMBER = 2;
    private volatile java.lang.Object ip_;
    /**
     * <code>string ip = 2;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <code>string ip = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPlayerNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, playerName_);
      }
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ip_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPlayerNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, playerName_);
      }
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ip_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.JoinRequest)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.JoinRequest other = (poker.networking.PokerOuterClass.JoinRequest) obj;

      boolean result = true;
      result = result && getPlayerName()
          .equals(other.getPlayerName());
      result = result && getIp()
          .equals(other.getIp());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAYER_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerName().hashCode();
      hash = (37 * hash) + IP_FIELD_NUMBER;
      hash = (53 * hash) + getIp().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.JoinRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.JoinRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.JoinRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.JoinRequest)
        poker.networking.PokerOuterClass.JoinRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.JoinRequest.class, poker.networking.PokerOuterClass.JoinRequest.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.JoinRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        playerName_ = "";

        ip_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinRequest_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.JoinRequest getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.JoinRequest.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.JoinRequest build() {
        poker.networking.PokerOuterClass.JoinRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.JoinRequest buildPartial() {
        poker.networking.PokerOuterClass.JoinRequest result = new poker.networking.PokerOuterClass.JoinRequest(this);
        result.playerName_ = playerName_;
        result.ip_ = ip_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.JoinRequest) {
          return mergeFrom((poker.networking.PokerOuterClass.JoinRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.JoinRequest other) {
        if (other == poker.networking.PokerOuterClass.JoinRequest.getDefaultInstance()) return this;
        if (!other.getPlayerName().isEmpty()) {
          playerName_ = other.playerName_;
          onChanged();
        }
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.JoinRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.JoinRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object playerName_ = "";
      /**
       * <code>string player_name = 1;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string player_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string player_name = 1;</code>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string player_name = 1;</code>
       */
      public Builder clearPlayerName() {
        
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>string player_name = 1;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <code>string ip = 2;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string ip = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string ip = 2;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string ip = 2;</code>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>string ip = 2;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.JoinRequest)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.JoinRequest)
    private static final poker.networking.PokerOuterClass.JoinRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.JoinRequest();
    }

    public static poker.networking.PokerOuterClass.JoinRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JoinRequest>
        PARSER = new com.google.protobuf.AbstractParser<JoinRequest>() {
      @java.lang.Override
      public JoinRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JoinRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JoinRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.JoinRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JoinResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.JoinResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 response = 1;</code>
     */
    int getResponse();

    /**
     * <code>.poker.networking.Player player = 2;</code>
     */
    boolean hasPlayer();
    /**
     * <code>.poker.networking.Player player = 2;</code>
     */
    poker.networking.PokerOuterClass.Player getPlayer();
    /**
     * <code>.poker.networking.Player player = 2;</code>
     */
    poker.networking.PokerOuterClass.PlayerOrBuilder getPlayerOrBuilder();
  }
  /**
   * Protobuf type {@code poker.networking.JoinResponse}
   */
  public  static final class JoinResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.JoinResponse)
      JoinResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JoinResponse.newBuilder() to construct.
    private JoinResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JoinResponse() {
      response_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JoinResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              response_ = input.readInt32();
              break;
            }
            case 18: {
              poker.networking.PokerOuterClass.Player.Builder subBuilder = null;
              if (player_ != null) {
                subBuilder = player_.toBuilder();
              }
              player_ = input.readMessage(poker.networking.PokerOuterClass.Player.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(player_);
                player_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.JoinResponse.class, poker.networking.PokerOuterClass.JoinResponse.Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_;
    /**
     * <code>int32 response = 1;</code>
     */
    public int getResponse() {
      return response_;
    }

    public static final int PLAYER_FIELD_NUMBER = 2;
    private poker.networking.PokerOuterClass.Player player_;
    /**
     * <code>.poker.networking.Player player = 2;</code>
     */
    public boolean hasPlayer() {
      return player_ != null;
    }
    /**
     * <code>.poker.networking.Player player = 2;</code>
     */
    public poker.networking.PokerOuterClass.Player getPlayer() {
      return player_ == null ? poker.networking.PokerOuterClass.Player.getDefaultInstance() : player_;
    }
    /**
     * <code>.poker.networking.Player player = 2;</code>
     */
    public poker.networking.PokerOuterClass.PlayerOrBuilder getPlayerOrBuilder() {
      return getPlayer();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != 0) {
        output.writeInt32(1, response_);
      }
      if (player_ != null) {
        output.writeMessage(2, getPlayer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, response_);
      }
      if (player_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPlayer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.JoinResponse)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.JoinResponse other = (poker.networking.PokerOuterClass.JoinResponse) obj;

      boolean result = true;
      result = result && (getResponse()
          == other.getResponse());
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && getPlayer()
            .equals(other.getPlayer());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + getResponse();
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.JoinResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.JoinResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.JoinResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.JoinResponse)
        poker.networking.PokerOuterClass.JoinResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.JoinResponse.class, poker.networking.PokerOuterClass.JoinResponse.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.JoinResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        response_ = 0;

        if (playerBuilder_ == null) {
          player_ = null;
        } else {
          player_ = null;
          playerBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_JoinResponse_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.JoinResponse getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.JoinResponse.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.JoinResponse build() {
        poker.networking.PokerOuterClass.JoinResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.JoinResponse buildPartial() {
        poker.networking.PokerOuterClass.JoinResponse result = new poker.networking.PokerOuterClass.JoinResponse(this);
        result.response_ = response_;
        if (playerBuilder_ == null) {
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.JoinResponse) {
          return mergeFrom((poker.networking.PokerOuterClass.JoinResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.JoinResponse other) {
        if (other == poker.networking.PokerOuterClass.JoinResponse.getDefaultInstance()) return this;
        if (other.getResponse() != 0) {
          setResponse(other.getResponse());
        }
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.JoinResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.JoinResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int response_ ;
      /**
       * <code>int32 response = 1;</code>
       */
      public int getResponse() {
        return response_;
      }
      /**
       * <code>int32 response = 1;</code>
       */
      public Builder setResponse(int value) {
        
        response_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 response = 1;</code>
       */
      public Builder clearResponse() {
        
        response_ = 0;
        onChanged();
        return this;
      }

      private poker.networking.PokerOuterClass.Player player_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          poker.networking.PokerOuterClass.Player, poker.networking.PokerOuterClass.Player.Builder, poker.networking.PokerOuterClass.PlayerOrBuilder> playerBuilder_;
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public boolean hasPlayer() {
        return playerBuilder_ != null || player_ != null;
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public poker.networking.PokerOuterClass.Player getPlayer() {
        if (playerBuilder_ == null) {
          return player_ == null ? poker.networking.PokerOuterClass.Player.getDefaultInstance() : player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public Builder setPlayer(poker.networking.PokerOuterClass.Player value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
          onChanged();
        } else {
          playerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public Builder setPlayer(
          poker.networking.PokerOuterClass.Player.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
          onChanged();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public Builder mergePlayer(poker.networking.PokerOuterClass.Player value) {
        if (playerBuilder_ == null) {
          if (player_ != null) {
            player_ =
              poker.networking.PokerOuterClass.Player.newBuilder(player_).mergeFrom(value).buildPartial();
          } else {
            player_ = value;
          }
          onChanged();
        } else {
          playerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = null;
          onChanged();
        } else {
          player_ = null;
          playerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public poker.networking.PokerOuterClass.Player.Builder getPlayerBuilder() {
        
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      public poker.networking.PokerOuterClass.PlayerOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_ == null ?
              poker.networking.PokerOuterClass.Player.getDefaultInstance() : player_;
        }
      }
      /**
       * <code>.poker.networking.Player player = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          poker.networking.PokerOuterClass.Player, poker.networking.PokerOuterClass.Player.Builder, poker.networking.PokerOuterClass.PlayerOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              poker.networking.PokerOuterClass.Player, poker.networking.PokerOuterClass.Player.Builder, poker.networking.PokerOuterClass.PlayerOrBuilder>(
                  getPlayer(),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.JoinResponse)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.JoinResponse)
    private static final poker.networking.PokerOuterClass.JoinResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.JoinResponse();
    }

    public static poker.networking.PokerOuterClass.JoinResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JoinResponse>
        PARSER = new com.google.protobuf.AbstractParser<JoinResponse>() {
      @java.lang.Override
      public JoinResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JoinResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JoinResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.JoinResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.Player)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.poker.networking.Color color = 2;</code>
     */
    boolean hasColor();
    /**
     * <code>.poker.networking.Color color = 2;</code>
     */
    poker.networking.PokerOuterClass.Color getColor();
    /**
     * <code>.poker.networking.Color color = 2;</code>
     */
    poker.networking.PokerOuterClass.ColorOrBuilder getColorOrBuilder();

    /**
     * <code>int32 id = 3;</code>
     */
    int getId();

    /**
     * <code>string ip = 4;</code>
     */
    java.lang.String getIp();
    /**
     * <code>string ip = 4;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>int32 money = 5;</code>
     */
    int getMoney();

    /**
     * <code>bool active = 6;</code>
     */
    boolean getActive();

    /**
     * <code>.poker.networking.Hand hand = 7;</code>
     */
    boolean hasHand();
    /**
     * <code>.poker.networking.Hand hand = 7;</code>
     */
    poker.networking.PokerOuterClass.Hand getHand();
    /**
     * <code>.poker.networking.Hand hand = 7;</code>
     */
    poker.networking.PokerOuterClass.HandOrBuilder getHandOrBuilder();

    /**
     * <code>int32 major_score = 8;</code>
     */
    int getMajorScore();

    /**
     * <code>int32 minor_score = 9;</code>
     */
    int getMinorScore();
  }
  /**
   * Protobuf type {@code poker.networking.Player}
   */
  public  static final class Player extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.Player)
      PlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Player.newBuilder() to construct.
    private Player(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Player() {
      name_ = "";
      id_ = 0;
      ip_ = "";
      money_ = 0;
      active_ = false;
      majorScore_ = 0;
      minorScore_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Player(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              poker.networking.PokerOuterClass.Color.Builder subBuilder = null;
              if (color_ != null) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(poker.networking.PokerOuterClass.Color.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              id_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            case 40: {

              money_ = input.readInt32();
              break;
            }
            case 48: {

              active_ = input.readBool();
              break;
            }
            case 58: {
              poker.networking.PokerOuterClass.Hand.Builder subBuilder = null;
              if (hand_ != null) {
                subBuilder = hand_.toBuilder();
              }
              hand_ = input.readMessage(poker.networking.PokerOuterClass.Hand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hand_);
                hand_ = subBuilder.buildPartial();
              }

              break;
            }
            case 64: {

              majorScore_ = input.readInt32();
              break;
            }
            case 72: {

              minorScore_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Player_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Player_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.Player.class, poker.networking.PokerOuterClass.Player.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private poker.networking.PokerOuterClass.Color color_;
    /**
     * <code>.poker.networking.Color color = 2;</code>
     */
    public boolean hasColor() {
      return color_ != null;
    }
    /**
     * <code>.poker.networking.Color color = 2;</code>
     */
    public poker.networking.PokerOuterClass.Color getColor() {
      return color_ == null ? poker.networking.PokerOuterClass.Color.getDefaultInstance() : color_;
    }
    /**
     * <code>.poker.networking.Color color = 2;</code>
     */
    public poker.networking.PokerOuterClass.ColorOrBuilder getColorOrBuilder() {
      return getColor();
    }

    public static final int ID_FIELD_NUMBER = 3;
    private int id_;
    /**
     * <code>int32 id = 3;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int IP_FIELD_NUMBER = 4;
    private volatile java.lang.Object ip_;
    /**
     * <code>string ip = 4;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <code>string ip = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MONEY_FIELD_NUMBER = 5;
    private int money_;
    /**
     * <code>int32 money = 5;</code>
     */
    public int getMoney() {
      return money_;
    }

    public static final int ACTIVE_FIELD_NUMBER = 6;
    private boolean active_;
    /**
     * <code>bool active = 6;</code>
     */
    public boolean getActive() {
      return active_;
    }

    public static final int HAND_FIELD_NUMBER = 7;
    private poker.networking.PokerOuterClass.Hand hand_;
    /**
     * <code>.poker.networking.Hand hand = 7;</code>
     */
    public boolean hasHand() {
      return hand_ != null;
    }
    /**
     * <code>.poker.networking.Hand hand = 7;</code>
     */
    public poker.networking.PokerOuterClass.Hand getHand() {
      return hand_ == null ? poker.networking.PokerOuterClass.Hand.getDefaultInstance() : hand_;
    }
    /**
     * <code>.poker.networking.Hand hand = 7;</code>
     */
    public poker.networking.PokerOuterClass.HandOrBuilder getHandOrBuilder() {
      return getHand();
    }

    public static final int MAJOR_SCORE_FIELD_NUMBER = 8;
    private int majorScore_;
    /**
     * <code>int32 major_score = 8;</code>
     */
    public int getMajorScore() {
      return majorScore_;
    }

    public static final int MINOR_SCORE_FIELD_NUMBER = 9;
    private int minorScore_;
    /**
     * <code>int32 minor_score = 9;</code>
     */
    public int getMinorScore() {
      return minorScore_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (color_ != null) {
        output.writeMessage(2, getColor());
      }
      if (id_ != 0) {
        output.writeInt32(3, id_);
      }
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ip_);
      }
      if (money_ != 0) {
        output.writeInt32(5, money_);
      }
      if (active_ != false) {
        output.writeBool(6, active_);
      }
      if (hand_ != null) {
        output.writeMessage(7, getHand());
      }
      if (majorScore_ != 0) {
        output.writeInt32(8, majorScore_);
      }
      if (minorScore_ != 0) {
        output.writeInt32(9, minorScore_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (color_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getColor());
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, id_);
      }
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, ip_);
      }
      if (money_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, money_);
      }
      if (active_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, active_);
      }
      if (hand_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getHand());
      }
      if (majorScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, majorScore_);
      }
      if (minorScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, minorScore_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.Player)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.Player other = (poker.networking.PokerOuterClass.Player) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && (getId()
          == other.getId());
      result = result && getIp()
          .equals(other.getIp());
      result = result && (getMoney()
          == other.getMoney());
      result = result && (getActive()
          == other.getActive());
      result = result && (hasHand() == other.hasHand());
      if (hasHand()) {
        result = result && getHand()
            .equals(other.getHand());
      }
      result = result && (getMajorScore()
          == other.getMajorScore());
      result = result && (getMinorScore()
          == other.getMinorScore());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + IP_FIELD_NUMBER;
      hash = (53 * hash) + getIp().hashCode();
      hash = (37 * hash) + MONEY_FIELD_NUMBER;
      hash = (53 * hash) + getMoney();
      hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActive());
      if (hasHand()) {
        hash = (37 * hash) + HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHand().hashCode();
      }
      hash = (37 * hash) + MAJOR_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getMajorScore();
      hash = (37 * hash) + MINOR_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getMinorScore();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.Player parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.Player prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.Player}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.Player)
        poker.networking.PokerOuterClass.PlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Player_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.Player.class, poker.networking.PokerOuterClass.Player.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.Player.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          color_ = null;
          colorBuilder_ = null;
        }
        id_ = 0;

        ip_ = "";

        money_ = 0;

        active_ = false;

        if (handBuilder_ == null) {
          hand_ = null;
        } else {
          hand_ = null;
          handBuilder_ = null;
        }
        majorScore_ = 0;

        minorScore_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Player_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Player getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.Player.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Player build() {
        poker.networking.PokerOuterClass.Player result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Player buildPartial() {
        poker.networking.PokerOuterClass.Player result = new poker.networking.PokerOuterClass.Player(this);
        result.name_ = name_;
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        result.id_ = id_;
        result.ip_ = ip_;
        result.money_ = money_;
        result.active_ = active_;
        if (handBuilder_ == null) {
          result.hand_ = hand_;
        } else {
          result.hand_ = handBuilder_.build();
        }
        result.majorScore_ = majorScore_;
        result.minorScore_ = minorScore_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.Player) {
          return mergeFrom((poker.networking.PokerOuterClass.Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.Player other) {
        if (other == poker.networking.PokerOuterClass.Player.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        if (other.getMoney() != 0) {
          setMoney(other.getMoney());
        }
        if (other.getActive() != false) {
          setActive(other.getActive());
        }
        if (other.hasHand()) {
          mergeHand(other.getHand());
        }
        if (other.getMajorScore() != 0) {
          setMajorScore(other.getMajorScore());
        }
        if (other.getMinorScore() != 0) {
          setMinorScore(other.getMinorScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.Player parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.Player) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private poker.networking.PokerOuterClass.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          poker.networking.PokerOuterClass.Color, poker.networking.PokerOuterClass.Color.Builder, poker.networking.PokerOuterClass.ColorOrBuilder> colorBuilder_;
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public boolean hasColor() {
        return colorBuilder_ != null || color_ != null;
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public poker.networking.PokerOuterClass.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? poker.networking.PokerOuterClass.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public Builder setColor(poker.networking.PokerOuterClass.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public Builder setColor(
          poker.networking.PokerOuterClass.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public Builder mergeColor(poker.networking.PokerOuterClass.Color value) {
        if (colorBuilder_ == null) {
          if (color_ != null) {
            color_ =
              poker.networking.PokerOuterClass.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          color_ = null;
          colorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public poker.networking.PokerOuterClass.Color.Builder getColorBuilder() {
        
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      public poker.networking.PokerOuterClass.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              poker.networking.PokerOuterClass.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <code>.poker.networking.Color color = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          poker.networking.PokerOuterClass.Color, poker.networking.PokerOuterClass.Color.Builder, poker.networking.PokerOuterClass.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              poker.networking.PokerOuterClass.Color, poker.networking.PokerOuterClass.Color.Builder, poker.networking.PokerOuterClass.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private int id_ ;
      /**
       * <code>int32 id = 3;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 3;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 3;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <code>string ip = 4;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string ip = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string ip = 4;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string ip = 4;</code>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>string ip = 4;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }

      private int money_ ;
      /**
       * <code>int32 money = 5;</code>
       */
      public int getMoney() {
        return money_;
      }
      /**
       * <code>int32 money = 5;</code>
       */
      public Builder setMoney(int value) {
        
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 money = 5;</code>
       */
      public Builder clearMoney() {
        
        money_ = 0;
        onChanged();
        return this;
      }

      private boolean active_ ;
      /**
       * <code>bool active = 6;</code>
       */
      public boolean getActive() {
        return active_;
      }
      /**
       * <code>bool active = 6;</code>
       */
      public Builder setActive(boolean value) {
        
        active_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool active = 6;</code>
       */
      public Builder clearActive() {
        
        active_ = false;
        onChanged();
        return this;
      }

      private poker.networking.PokerOuterClass.Hand hand_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          poker.networking.PokerOuterClass.Hand, poker.networking.PokerOuterClass.Hand.Builder, poker.networking.PokerOuterClass.HandOrBuilder> handBuilder_;
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public boolean hasHand() {
        return handBuilder_ != null || hand_ != null;
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public poker.networking.PokerOuterClass.Hand getHand() {
        if (handBuilder_ == null) {
          return hand_ == null ? poker.networking.PokerOuterClass.Hand.getDefaultInstance() : hand_;
        } else {
          return handBuilder_.getMessage();
        }
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public Builder setHand(poker.networking.PokerOuterClass.Hand value) {
        if (handBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hand_ = value;
          onChanged();
        } else {
          handBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public Builder setHand(
          poker.networking.PokerOuterClass.Hand.Builder builderForValue) {
        if (handBuilder_ == null) {
          hand_ = builderForValue.build();
          onChanged();
        } else {
          handBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public Builder mergeHand(poker.networking.PokerOuterClass.Hand value) {
        if (handBuilder_ == null) {
          if (hand_ != null) {
            hand_ =
              poker.networking.PokerOuterClass.Hand.newBuilder(hand_).mergeFrom(value).buildPartial();
          } else {
            hand_ = value;
          }
          onChanged();
        } else {
          handBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public Builder clearHand() {
        if (handBuilder_ == null) {
          hand_ = null;
          onChanged();
        } else {
          hand_ = null;
          handBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public poker.networking.PokerOuterClass.Hand.Builder getHandBuilder() {
        
        onChanged();
        return getHandFieldBuilder().getBuilder();
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      public poker.networking.PokerOuterClass.HandOrBuilder getHandOrBuilder() {
        if (handBuilder_ != null) {
          return handBuilder_.getMessageOrBuilder();
        } else {
          return hand_ == null ?
              poker.networking.PokerOuterClass.Hand.getDefaultInstance() : hand_;
        }
      }
      /**
       * <code>.poker.networking.Hand hand = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          poker.networking.PokerOuterClass.Hand, poker.networking.PokerOuterClass.Hand.Builder, poker.networking.PokerOuterClass.HandOrBuilder> 
          getHandFieldBuilder() {
        if (handBuilder_ == null) {
          handBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              poker.networking.PokerOuterClass.Hand, poker.networking.PokerOuterClass.Hand.Builder, poker.networking.PokerOuterClass.HandOrBuilder>(
                  getHand(),
                  getParentForChildren(),
                  isClean());
          hand_ = null;
        }
        return handBuilder_;
      }

      private int majorScore_ ;
      /**
       * <code>int32 major_score = 8;</code>
       */
      public int getMajorScore() {
        return majorScore_;
      }
      /**
       * <code>int32 major_score = 8;</code>
       */
      public Builder setMajorScore(int value) {
        
        majorScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 major_score = 8;</code>
       */
      public Builder clearMajorScore() {
        
        majorScore_ = 0;
        onChanged();
        return this;
      }

      private int minorScore_ ;
      /**
       * <code>int32 minor_score = 9;</code>
       */
      public int getMinorScore() {
        return minorScore_;
      }
      /**
       * <code>int32 minor_score = 9;</code>
       */
      public Builder setMinorScore(int value) {
        
        minorScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minor_score = 9;</code>
       */
      public Builder clearMinorScore() {
        
        minorScore_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.Player)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.Player)
    private static final poker.networking.PokerOuterClass.Player DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.Player();
    }

    public static poker.networking.PokerOuterClass.Player getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Player>
        PARSER = new com.google.protobuf.AbstractParser<Player>() {
      @java.lang.Override
      public Player parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Player(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Player> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Player> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.Player getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.Hand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    java.util.List<poker.networking.PokerOuterClass.Card> 
        getCardsList();
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    poker.networking.PokerOuterClass.Card getCards(int index);
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    java.util.List<? extends poker.networking.PokerOuterClass.CardOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    poker.networking.PokerOuterClass.CardOrBuilder getCardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code poker.networking.Hand}
   */
  public  static final class Hand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.Hand)
      HandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Hand.newBuilder() to construct.
    private Hand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Hand() {
      cards_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Hand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cards_ = new java.util.ArrayList<poker.networking.PokerOuterClass.Card>();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.add(
                  input.readMessage(poker.networking.PokerOuterClass.Card.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Hand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Hand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.Hand.class, poker.networking.PokerOuterClass.Hand.Builder.class);
    }

    public static final int CARDS_FIELD_NUMBER = 1;
    private java.util.List<poker.networking.PokerOuterClass.Card> cards_;
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    public java.util.List<poker.networking.PokerOuterClass.Card> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    public java.util.List<? extends poker.networking.PokerOuterClass.CardOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    public poker.networking.PokerOuterClass.Card getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .poker.networking.Card cards = 1;</code>
     */
    public poker.networking.PokerOuterClass.CardOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(1, cards_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cards_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.Hand)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.Hand other = (poker.networking.PokerOuterClass.Hand) obj;

      boolean result = true;
      result = result && getCardsList()
          .equals(other.getCardsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCardsCount() > 0) {
        hash = (37 * hash) + CARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.Hand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Hand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Hand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Hand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.Hand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.Hand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.Hand)
        poker.networking.PokerOuterClass.HandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Hand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Hand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.Hand.class, poker.networking.PokerOuterClass.Hand.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.Hand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCardsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Hand_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Hand getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.Hand.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Hand build() {
        poker.networking.PokerOuterClass.Hand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Hand buildPartial() {
        poker.networking.PokerOuterClass.Hand result = new poker.networking.PokerOuterClass.Hand(this);
        int from_bitField0_ = bitField0_;
        if (cardsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.Hand) {
          return mergeFrom((poker.networking.PokerOuterClass.Hand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.Hand other) {
        if (other == poker.networking.PokerOuterClass.Hand.getDefaultInstance()) return this;
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.Hand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.Hand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<poker.networking.PokerOuterClass.Card> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = new java.util.ArrayList<poker.networking.PokerOuterClass.Card>(cards_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          poker.networking.PokerOuterClass.Card, poker.networking.PokerOuterClass.Card.Builder, poker.networking.PokerOuterClass.CardOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public java.util.List<poker.networking.PokerOuterClass.Card> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public poker.networking.PokerOuterClass.Card getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder setCards(
          int index, poker.networking.PokerOuterClass.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder setCards(
          int index, poker.networking.PokerOuterClass.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder addCards(poker.networking.PokerOuterClass.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder addCards(
          int index, poker.networking.PokerOuterClass.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder addCards(
          poker.networking.PokerOuterClass.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder addCards(
          int index, poker.networking.PokerOuterClass.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends poker.networking.PokerOuterClass.Card> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public poker.networking.PokerOuterClass.Card.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public poker.networking.PokerOuterClass.CardOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public java.util.List<? extends poker.networking.PokerOuterClass.CardOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public poker.networking.PokerOuterClass.Card.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            poker.networking.PokerOuterClass.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public poker.networking.PokerOuterClass.Card.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, poker.networking.PokerOuterClass.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.networking.Card cards = 1;</code>
       */
      public java.util.List<poker.networking.PokerOuterClass.Card.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          poker.networking.PokerOuterClass.Card, poker.networking.PokerOuterClass.Card.Builder, poker.networking.PokerOuterClass.CardOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              poker.networking.PokerOuterClass.Card, poker.networking.PokerOuterClass.Card.Builder, poker.networking.PokerOuterClass.CardOrBuilder>(
                  cards_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.Hand)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.Hand)
    private static final poker.networking.PokerOuterClass.Hand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.Hand();
    }

    public static poker.networking.PokerOuterClass.Hand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Hand>
        PARSER = new com.google.protobuf.AbstractParser<Hand>() {
      @java.lang.Override
      public Hand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Hand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Hand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.Hand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ColorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.Color)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 r = 1;</code>
     */
    int getR();

    /**
     * <code>int32 g = 2;</code>
     */
    int getG();

    /**
     * <code>int32 b = 3;</code>
     */
    int getB();
  }
  /**
   * Protobuf type {@code poker.networking.Color}
   */
  public  static final class Color extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.Color)
      ColorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Color.newBuilder() to construct.
    private Color(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Color() {
      r_ = 0;
      g_ = 0;
      b_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Color(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              r_ = input.readInt32();
              break;
            }
            case 16: {

              g_ = input.readInt32();
              break;
            }
            case 24: {

              b_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Color_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Color_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.Color.class, poker.networking.PokerOuterClass.Color.Builder.class);
    }

    public static final int R_FIELD_NUMBER = 1;
    private int r_;
    /**
     * <code>int32 r = 1;</code>
     */
    public int getR() {
      return r_;
    }

    public static final int G_FIELD_NUMBER = 2;
    private int g_;
    /**
     * <code>int32 g = 2;</code>
     */
    public int getG() {
      return g_;
    }

    public static final int B_FIELD_NUMBER = 3;
    private int b_;
    /**
     * <code>int32 b = 3;</code>
     */
    public int getB() {
      return b_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (r_ != 0) {
        output.writeInt32(1, r_);
      }
      if (g_ != 0) {
        output.writeInt32(2, g_);
      }
      if (b_ != 0) {
        output.writeInt32(3, b_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (r_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, r_);
      }
      if (g_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, g_);
      }
      if (b_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, b_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.Color)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.Color other = (poker.networking.PokerOuterClass.Color) obj;

      boolean result = true;
      result = result && (getR()
          == other.getR());
      result = result && (getG()
          == other.getG());
      result = result && (getB()
          == other.getB());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + R_FIELD_NUMBER;
      hash = (53 * hash) + getR();
      hash = (37 * hash) + G_FIELD_NUMBER;
      hash = (53 * hash) + getG();
      hash = (37 * hash) + B_FIELD_NUMBER;
      hash = (53 * hash) + getB();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.Color parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Color parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Color parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Color parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.Color prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.Color}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.Color)
        poker.networking.PokerOuterClass.ColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Color_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Color_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.Color.class, poker.networking.PokerOuterClass.Color.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.Color.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        r_ = 0;

        g_ = 0;

        b_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Color_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Color getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.Color.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Color build() {
        poker.networking.PokerOuterClass.Color result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Color buildPartial() {
        poker.networking.PokerOuterClass.Color result = new poker.networking.PokerOuterClass.Color(this);
        result.r_ = r_;
        result.g_ = g_;
        result.b_ = b_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.Color) {
          return mergeFrom((poker.networking.PokerOuterClass.Color)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.Color other) {
        if (other == poker.networking.PokerOuterClass.Color.getDefaultInstance()) return this;
        if (other.getR() != 0) {
          setR(other.getR());
        }
        if (other.getG() != 0) {
          setG(other.getG());
        }
        if (other.getB() != 0) {
          setB(other.getB());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.Color parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.Color) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int r_ ;
      /**
       * <code>int32 r = 1;</code>
       */
      public int getR() {
        return r_;
      }
      /**
       * <code>int32 r = 1;</code>
       */
      public Builder setR(int value) {
        
        r_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 r = 1;</code>
       */
      public Builder clearR() {
        
        r_ = 0;
        onChanged();
        return this;
      }

      private int g_ ;
      /**
       * <code>int32 g = 2;</code>
       */
      public int getG() {
        return g_;
      }
      /**
       * <code>int32 g = 2;</code>
       */
      public Builder setG(int value) {
        
        g_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 g = 2;</code>
       */
      public Builder clearG() {
        
        g_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>int32 b = 3;</code>
       */
      public int getB() {
        return b_;
      }
      /**
       * <code>int32 b = 3;</code>
       */
      public Builder setB(int value) {
        
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 b = 3;</code>
       */
      public Builder clearB() {
        
        b_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.Color)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.Color)
    private static final poker.networking.PokerOuterClass.Color DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.Color();
    }

    public static poker.networking.PokerOuterClass.Color getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Color>
        PARSER = new com.google.protobuf.AbstractParser<Color>() {
      @java.lang.Override
      public Color parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Color(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Color> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Color> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.Color getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmptyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.Empty)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code poker.networking.Empty}
   */
  public  static final class Empty extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.Empty)
      EmptyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Empty.newBuilder() to construct.
    private Empty(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Empty() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Empty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Empty_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Empty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.Empty.class, poker.networking.PokerOuterClass.Empty.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.Empty)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.Empty other = (poker.networking.PokerOuterClass.Empty) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.Empty parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Empty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Empty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Empty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.Empty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.Empty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.Empty)
        poker.networking.PokerOuterClass.EmptyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Empty_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Empty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.Empty.class, poker.networking.PokerOuterClass.Empty.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.Empty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Empty_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Empty getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.Empty.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Empty build() {
        poker.networking.PokerOuterClass.Empty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Empty buildPartial() {
        poker.networking.PokerOuterClass.Empty result = new poker.networking.PokerOuterClass.Empty(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.Empty) {
          return mergeFrom((poker.networking.PokerOuterClass.Empty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.Empty other) {
        if (other == poker.networking.PokerOuterClass.Empty.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.Empty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.Empty) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.Empty)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.Empty)
    private static final poker.networking.PokerOuterClass.Empty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.Empty();
    }

    public static poker.networking.PokerOuterClass.Empty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Empty>
        PARSER = new com.google.protobuf.AbstractParser<Empty>() {
      @java.lang.Override
      public Empty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Empty(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Empty> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Empty> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.Empty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.GameData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 round = 1;</code>
     */
    int getRound();

    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    java.util.List<poker.networking.PokerOuterClass.Card> 
        getRiverList();
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    poker.networking.PokerOuterClass.Card getRiver(int index);
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    int getRiverCount();
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    java.util.List<? extends poker.networking.PokerOuterClass.CardOrBuilder> 
        getRiverOrBuilderList();
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    poker.networking.PokerOuterClass.CardOrBuilder getRiverOrBuilder(
        int index);

    /**
     * <code>int32 bet = 3;</code>
     */
    int getBet();

    /**
     * <code>int32 table_money = 4;</code>
     */
    int getTableMoney();

    /**
     * <code>int32 anti = 5;</code>
     */
    int getAnti();

    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    java.util.List<poker.networking.PokerOuterClass.Player> 
        getPlayersList();
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    poker.networking.PokerOuterClass.Player getPlayers(int index);
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    java.util.List<? extends poker.networking.PokerOuterClass.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    poker.networking.PokerOuterClass.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    /**
     * <code>int32 turn = 7;</code>
     */
    int getTurn();
  }
  /**
   * Protobuf type {@code poker.networking.GameData}
   */
  public  static final class GameData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.GameData)
      GameDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameData.newBuilder() to construct.
    private GameData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameData() {
      round_ = 0;
      river_ = java.util.Collections.emptyList();
      bet_ = 0;
      tableMoney_ = 0;
      anti_ = 0;
      players_ = java.util.Collections.emptyList();
      turn_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              round_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                river_ = new java.util.ArrayList<poker.networking.PokerOuterClass.Card>();
                mutable_bitField0_ |= 0x00000002;
              }
              river_.add(
                  input.readMessage(poker.networking.PokerOuterClass.Card.parser(), extensionRegistry));
              break;
            }
            case 24: {

              bet_ = input.readInt32();
              break;
            }
            case 32: {

              tableMoney_ = input.readInt32();
              break;
            }
            case 40: {

              anti_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                players_ = new java.util.ArrayList<poker.networking.PokerOuterClass.Player>();
                mutable_bitField0_ |= 0x00000020;
              }
              players_.add(
                  input.readMessage(poker.networking.PokerOuterClass.Player.parser(), extensionRegistry));
              break;
            }
            case 56: {

              turn_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          river_ = java.util.Collections.unmodifiableList(river_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_GameData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_GameData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.GameData.class, poker.networking.PokerOuterClass.GameData.Builder.class);
    }

    private int bitField0_;
    public static final int ROUND_FIELD_NUMBER = 1;
    private int round_;
    /**
     * <code>int32 round = 1;</code>
     */
    public int getRound() {
      return round_;
    }

    public static final int RIVER_FIELD_NUMBER = 2;
    private java.util.List<poker.networking.PokerOuterClass.Card> river_;
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    public java.util.List<poker.networking.PokerOuterClass.Card> getRiverList() {
      return river_;
    }
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    public java.util.List<? extends poker.networking.PokerOuterClass.CardOrBuilder> 
        getRiverOrBuilderList() {
      return river_;
    }
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    public int getRiverCount() {
      return river_.size();
    }
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    public poker.networking.PokerOuterClass.Card getRiver(int index) {
      return river_.get(index);
    }
    /**
     * <code>repeated .poker.networking.Card river = 2;</code>
     */
    public poker.networking.PokerOuterClass.CardOrBuilder getRiverOrBuilder(
        int index) {
      return river_.get(index);
    }

    public static final int BET_FIELD_NUMBER = 3;
    private int bet_;
    /**
     * <code>int32 bet = 3;</code>
     */
    public int getBet() {
      return bet_;
    }

    public static final int TABLE_MONEY_FIELD_NUMBER = 4;
    private int tableMoney_;
    /**
     * <code>int32 table_money = 4;</code>
     */
    public int getTableMoney() {
      return tableMoney_;
    }

    public static final int ANTI_FIELD_NUMBER = 5;
    private int anti_;
    /**
     * <code>int32 anti = 5;</code>
     */
    public int getAnti() {
      return anti_;
    }

    public static final int PLAYERS_FIELD_NUMBER = 6;
    private java.util.List<poker.networking.PokerOuterClass.Player> players_;
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    public java.util.List<poker.networking.PokerOuterClass.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    public java.util.List<? extends poker.networking.PokerOuterClass.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    public poker.networking.PokerOuterClass.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .poker.networking.Player players = 6;</code>
     */
    public poker.networking.PokerOuterClass.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    public static final int TURN_FIELD_NUMBER = 7;
    private int turn_;
    /**
     * <code>int32 turn = 7;</code>
     */
    public int getTurn() {
      return turn_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (round_ != 0) {
        output.writeInt32(1, round_);
      }
      for (int i = 0; i < river_.size(); i++) {
        output.writeMessage(2, river_.get(i));
      }
      if (bet_ != 0) {
        output.writeInt32(3, bet_);
      }
      if (tableMoney_ != 0) {
        output.writeInt32(4, tableMoney_);
      }
      if (anti_ != 0) {
        output.writeInt32(5, anti_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(6, players_.get(i));
      }
      if (turn_ != 0) {
        output.writeInt32(7, turn_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (round_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, round_);
      }
      for (int i = 0; i < river_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, river_.get(i));
      }
      if (bet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bet_);
      }
      if (tableMoney_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, tableMoney_);
      }
      if (anti_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, anti_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, players_.get(i));
      }
      if (turn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, turn_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.GameData)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.GameData other = (poker.networking.PokerOuterClass.GameData) obj;

      boolean result = true;
      result = result && (getRound()
          == other.getRound());
      result = result && getRiverList()
          .equals(other.getRiverList());
      result = result && (getBet()
          == other.getBet());
      result = result && (getTableMoney()
          == other.getTableMoney());
      result = result && (getAnti()
          == other.getAnti());
      result = result && getPlayersList()
          .equals(other.getPlayersList());
      result = result && (getTurn()
          == other.getTurn());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROUND_FIELD_NUMBER;
      hash = (53 * hash) + getRound();
      if (getRiverCount() > 0) {
        hash = (37 * hash) + RIVER_FIELD_NUMBER;
        hash = (53 * hash) + getRiverList().hashCode();
      }
      hash = (37 * hash) + BET_FIELD_NUMBER;
      hash = (53 * hash) + getBet();
      hash = (37 * hash) + TABLE_MONEY_FIELD_NUMBER;
      hash = (53 * hash) + getTableMoney();
      hash = (37 * hash) + ANTI_FIELD_NUMBER;
      hash = (53 * hash) + getAnti();
      if (getPlayersCount() > 0) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayersList().hashCode();
      }
      hash = (37 * hash) + TURN_FIELD_NUMBER;
      hash = (53 * hash) + getTurn();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.GameData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.GameData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.GameData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.GameData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.GameData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.GameData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.GameData)
        poker.networking.PokerOuterClass.GameDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_GameData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_GameData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.GameData.class, poker.networking.PokerOuterClass.GameData.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.GameData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRiverFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        round_ = 0;

        if (riverBuilder_ == null) {
          river_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          riverBuilder_.clear();
        }
        bet_ = 0;

        tableMoney_ = 0;

        anti_ = 0;

        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          playersBuilder_.clear();
        }
        turn_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_GameData_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.GameData getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.GameData.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.GameData build() {
        poker.networking.PokerOuterClass.GameData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.GameData buildPartial() {
        poker.networking.PokerOuterClass.GameData result = new poker.networking.PokerOuterClass.GameData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.round_ = round_;
        if (riverBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            river_ = java.util.Collections.unmodifiableList(river_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.river_ = river_;
        } else {
          result.river_ = riverBuilder_.build();
        }
        result.bet_ = bet_;
        result.tableMoney_ = tableMoney_;
        result.anti_ = anti_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.turn_ = turn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.GameData) {
          return mergeFrom((poker.networking.PokerOuterClass.GameData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.GameData other) {
        if (other == poker.networking.PokerOuterClass.GameData.getDefaultInstance()) return this;
        if (other.getRound() != 0) {
          setRound(other.getRound());
        }
        if (riverBuilder_ == null) {
          if (!other.river_.isEmpty()) {
            if (river_.isEmpty()) {
              river_ = other.river_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRiverIsMutable();
              river_.addAll(other.river_);
            }
            onChanged();
          }
        } else {
          if (!other.river_.isEmpty()) {
            if (riverBuilder_.isEmpty()) {
              riverBuilder_.dispose();
              riverBuilder_ = null;
              river_ = other.river_;
              bitField0_ = (bitField0_ & ~0x00000002);
              riverBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRiverFieldBuilder() : null;
            } else {
              riverBuilder_.addAllMessages(other.river_);
            }
          }
        }
        if (other.getBet() != 0) {
          setBet(other.getBet());
        }
        if (other.getTableMoney() != 0) {
          setTableMoney(other.getTableMoney());
        }
        if (other.getAnti() != 0) {
          setAnti(other.getAnti());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000020);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.getTurn() != 0) {
          setTurn(other.getTurn());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.GameData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.GameData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int round_ ;
      /**
       * <code>int32 round = 1;</code>
       */
      public int getRound() {
        return round_;
      }
      /**
       * <code>int32 round = 1;</code>
       */
      public Builder setRound(int value) {
        
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 round = 1;</code>
       */
      public Builder clearRound() {
        
        round_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<poker.networking.PokerOuterClass.Card> river_ =
        java.util.Collections.emptyList();
      private void ensureRiverIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          river_ = new java.util.ArrayList<poker.networking.PokerOuterClass.Card>(river_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          poker.networking.PokerOuterClass.Card, poker.networking.PokerOuterClass.Card.Builder, poker.networking.PokerOuterClass.CardOrBuilder> riverBuilder_;

      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public java.util.List<poker.networking.PokerOuterClass.Card> getRiverList() {
        if (riverBuilder_ == null) {
          return java.util.Collections.unmodifiableList(river_);
        } else {
          return riverBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public int getRiverCount() {
        if (riverBuilder_ == null) {
          return river_.size();
        } else {
          return riverBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public poker.networking.PokerOuterClass.Card getRiver(int index) {
        if (riverBuilder_ == null) {
          return river_.get(index);
        } else {
          return riverBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder setRiver(
          int index, poker.networking.PokerOuterClass.Card value) {
        if (riverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRiverIsMutable();
          river_.set(index, value);
          onChanged();
        } else {
          riverBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder setRiver(
          int index, poker.networking.PokerOuterClass.Card.Builder builderForValue) {
        if (riverBuilder_ == null) {
          ensureRiverIsMutable();
          river_.set(index, builderForValue.build());
          onChanged();
        } else {
          riverBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder addRiver(poker.networking.PokerOuterClass.Card value) {
        if (riverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRiverIsMutable();
          river_.add(value);
          onChanged();
        } else {
          riverBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder addRiver(
          int index, poker.networking.PokerOuterClass.Card value) {
        if (riverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRiverIsMutable();
          river_.add(index, value);
          onChanged();
        } else {
          riverBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder addRiver(
          poker.networking.PokerOuterClass.Card.Builder builderForValue) {
        if (riverBuilder_ == null) {
          ensureRiverIsMutable();
          river_.add(builderForValue.build());
          onChanged();
        } else {
          riverBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder addRiver(
          int index, poker.networking.PokerOuterClass.Card.Builder builderForValue) {
        if (riverBuilder_ == null) {
          ensureRiverIsMutable();
          river_.add(index, builderForValue.build());
          onChanged();
        } else {
          riverBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder addAllRiver(
          java.lang.Iterable<? extends poker.networking.PokerOuterClass.Card> values) {
        if (riverBuilder_ == null) {
          ensureRiverIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, river_);
          onChanged();
        } else {
          riverBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder clearRiver() {
        if (riverBuilder_ == null) {
          river_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          riverBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public Builder removeRiver(int index) {
        if (riverBuilder_ == null) {
          ensureRiverIsMutable();
          river_.remove(index);
          onChanged();
        } else {
          riverBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public poker.networking.PokerOuterClass.Card.Builder getRiverBuilder(
          int index) {
        return getRiverFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public poker.networking.PokerOuterClass.CardOrBuilder getRiverOrBuilder(
          int index) {
        if (riverBuilder_ == null) {
          return river_.get(index);  } else {
          return riverBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public java.util.List<? extends poker.networking.PokerOuterClass.CardOrBuilder> 
           getRiverOrBuilderList() {
        if (riverBuilder_ != null) {
          return riverBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(river_);
        }
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public poker.networking.PokerOuterClass.Card.Builder addRiverBuilder() {
        return getRiverFieldBuilder().addBuilder(
            poker.networking.PokerOuterClass.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public poker.networking.PokerOuterClass.Card.Builder addRiverBuilder(
          int index) {
        return getRiverFieldBuilder().addBuilder(
            index, poker.networking.PokerOuterClass.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.networking.Card river = 2;</code>
       */
      public java.util.List<poker.networking.PokerOuterClass.Card.Builder> 
           getRiverBuilderList() {
        return getRiverFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          poker.networking.PokerOuterClass.Card, poker.networking.PokerOuterClass.Card.Builder, poker.networking.PokerOuterClass.CardOrBuilder> 
          getRiverFieldBuilder() {
        if (riverBuilder_ == null) {
          riverBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              poker.networking.PokerOuterClass.Card, poker.networking.PokerOuterClass.Card.Builder, poker.networking.PokerOuterClass.CardOrBuilder>(
                  river_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          river_ = null;
        }
        return riverBuilder_;
      }

      private int bet_ ;
      /**
       * <code>int32 bet = 3;</code>
       */
      public int getBet() {
        return bet_;
      }
      /**
       * <code>int32 bet = 3;</code>
       */
      public Builder setBet(int value) {
        
        bet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bet = 3;</code>
       */
      public Builder clearBet() {
        
        bet_ = 0;
        onChanged();
        return this;
      }

      private int tableMoney_ ;
      /**
       * <code>int32 table_money = 4;</code>
       */
      public int getTableMoney() {
        return tableMoney_;
      }
      /**
       * <code>int32 table_money = 4;</code>
       */
      public Builder setTableMoney(int value) {
        
        tableMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 table_money = 4;</code>
       */
      public Builder clearTableMoney() {
        
        tableMoney_ = 0;
        onChanged();
        return this;
      }

      private int anti_ ;
      /**
       * <code>int32 anti = 5;</code>
       */
      public int getAnti() {
        return anti_;
      }
      /**
       * <code>int32 anti = 5;</code>
       */
      public Builder setAnti(int value) {
        
        anti_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 anti = 5;</code>
       */
      public Builder clearAnti() {
        
        anti_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<poker.networking.PokerOuterClass.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          players_ = new java.util.ArrayList<poker.networking.PokerOuterClass.Player>(players_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          poker.networking.PokerOuterClass.Player, poker.networking.PokerOuterClass.Player.Builder, poker.networking.PokerOuterClass.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public java.util.List<poker.networking.PokerOuterClass.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public poker.networking.PokerOuterClass.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder setPlayers(
          int index, poker.networking.PokerOuterClass.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder setPlayers(
          int index, poker.networking.PokerOuterClass.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder addPlayers(poker.networking.PokerOuterClass.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder addPlayers(
          int index, poker.networking.PokerOuterClass.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder addPlayers(
          poker.networking.PokerOuterClass.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder addPlayers(
          int index, poker.networking.PokerOuterClass.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends poker.networking.PokerOuterClass.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public poker.networking.PokerOuterClass.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public poker.networking.PokerOuterClass.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public java.util.List<? extends poker.networking.PokerOuterClass.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public poker.networking.PokerOuterClass.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            poker.networking.PokerOuterClass.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public poker.networking.PokerOuterClass.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, poker.networking.PokerOuterClass.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.networking.Player players = 6;</code>
       */
      public java.util.List<poker.networking.PokerOuterClass.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          poker.networking.PokerOuterClass.Player, poker.networking.PokerOuterClass.Player.Builder, poker.networking.PokerOuterClass.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              poker.networking.PokerOuterClass.Player, poker.networking.PokerOuterClass.Player.Builder, poker.networking.PokerOuterClass.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      private int turn_ ;
      /**
       * <code>int32 turn = 7;</code>
       */
      public int getTurn() {
        return turn_;
      }
      /**
       * <code>int32 turn = 7;</code>
       */
      public Builder setTurn(int value) {
        
        turn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 turn = 7;</code>
       */
      public Builder clearTurn() {
        
        turn_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.GameData)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.GameData)
    private static final poker.networking.PokerOuterClass.GameData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.GameData();
    }

    public static poker.networking.PokerOuterClass.GameData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameData>
        PARSER = new com.google.protobuf.AbstractParser<GameData>() {
      @java.lang.Override
      public GameData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.GameData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:poker.networking.Card)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 suit = 1;</code>
     */
    int getSuit();

    /**
     * <code>int32 rank = 2;</code>
     */
    int getRank();
  }
  /**
   * Protobuf type {@code poker.networking.Card}
   */
  public  static final class Card extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:poker.networking.Card)
      CardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Card.newBuilder() to construct.
    private Card(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Card() {
      suit_ = 0;
      rank_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Card(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              suit_ = input.readInt32();
              break;
            }
            case 16: {

              rank_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Card_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.networking.PokerOuterClass.internal_static_poker_networking_Card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.networking.PokerOuterClass.Card.class, poker.networking.PokerOuterClass.Card.Builder.class);
    }

    public static final int SUIT_FIELD_NUMBER = 1;
    private int suit_;
    /**
     * <code>int32 suit = 1;</code>
     */
    public int getSuit() {
      return suit_;
    }

    public static final int RANK_FIELD_NUMBER = 2;
    private int rank_;
    /**
     * <code>int32 rank = 2;</code>
     */
    public int getRank() {
      return rank_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (suit_ != 0) {
        output.writeInt32(1, suit_);
      }
      if (rank_ != 0) {
        output.writeInt32(2, rank_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (suit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, suit_);
      }
      if (rank_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rank_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof poker.networking.PokerOuterClass.Card)) {
        return super.equals(obj);
      }
      poker.networking.PokerOuterClass.Card other = (poker.networking.PokerOuterClass.Card) obj;

      boolean result = true;
      result = result && (getSuit()
          == other.getSuit());
      result = result && (getRank()
          == other.getRank());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SUIT_FIELD_NUMBER;
      hash = (53 * hash) + getSuit();
      hash = (37 * hash) + RANK_FIELD_NUMBER;
      hash = (53 * hash) + getRank();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static poker.networking.PokerOuterClass.Card parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static poker.networking.PokerOuterClass.Card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(poker.networking.PokerOuterClass.Card prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.networking.Card}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:poker.networking.Card)
        poker.networking.PokerOuterClass.CardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Card_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Card_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.networking.PokerOuterClass.Card.class, poker.networking.PokerOuterClass.Card.Builder.class);
      }

      // Construct using poker.networking.PokerOuterClass.Card.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        suit_ = 0;

        rank_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.networking.PokerOuterClass.internal_static_poker_networking_Card_descriptor;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Card getDefaultInstanceForType() {
        return poker.networking.PokerOuterClass.Card.getDefaultInstance();
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Card build() {
        poker.networking.PokerOuterClass.Card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public poker.networking.PokerOuterClass.Card buildPartial() {
        poker.networking.PokerOuterClass.Card result = new poker.networking.PokerOuterClass.Card(this);
        result.suit_ = suit_;
        result.rank_ = rank_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.networking.PokerOuterClass.Card) {
          return mergeFrom((poker.networking.PokerOuterClass.Card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.networking.PokerOuterClass.Card other) {
        if (other == poker.networking.PokerOuterClass.Card.getDefaultInstance()) return this;
        if (other.getSuit() != 0) {
          setSuit(other.getSuit());
        }
        if (other.getRank() != 0) {
          setRank(other.getRank());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.networking.PokerOuterClass.Card parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.networking.PokerOuterClass.Card) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int suit_ ;
      /**
       * <code>int32 suit = 1;</code>
       */
      public int getSuit() {
        return suit_;
      }
      /**
       * <code>int32 suit = 1;</code>
       */
      public Builder setSuit(int value) {
        
        suit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 suit = 1;</code>
       */
      public Builder clearSuit() {
        
        suit_ = 0;
        onChanged();
        return this;
      }

      private int rank_ ;
      /**
       * <code>int32 rank = 2;</code>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <code>int32 rank = 2;</code>
       */
      public Builder setRank(int value) {
        
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 rank = 2;</code>
       */
      public Builder clearRank() {
        
        rank_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:poker.networking.Card)
    }

    // @@protoc_insertion_point(class_scope:poker.networking.Card)
    private static final poker.networking.PokerOuterClass.Card DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new poker.networking.PokerOuterClass.Card();
    }

    public static poker.networking.PokerOuterClass.Card getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Card>
        PARSER = new com.google.protobuf.AbstractParser<Card>() {
      @java.lang.Override
      public Card parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Card(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Card> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Card> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public poker.networking.PokerOuterClass.Card getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_Choice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_Choice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_JoinRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_JoinRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_JoinResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_JoinResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_Player_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_Hand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_Hand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_Color_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_Color_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_Empty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_Empty_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_GameData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_GameData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_networking_Card_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_poker_networking_Card_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013poker.proto\022\020poker.networking\"4\n\006Choic" +
      "e\022\n\n\002id\030\001 \001(\005\022\016\n\006choice\030\002 \001(\005\022\016\n\006newBet\030" +
      "\003 \001(\005\".\n\013JoinRequest\022\023\n\013player_name\030\001 \001(" +
      "\t\022\n\n\002ip\030\002 \001(\t\"J\n\014JoinResponse\022\020\n\010respons" +
      "e\030\001 \001(\005\022(\n\006player\030\002 \001(\0132\030.poker.networki" +
      "ng.Player\"\305\001\n\006Player\022\014\n\004name\030\001 \001(\t\022&\n\005co" +
      "lor\030\002 \001(\0132\027.poker.networking.Color\022\n\n\002id" +
      "\030\003 \001(\005\022\n\n\002ip\030\004 \001(\t\022\r\n\005money\030\005 \001(\005\022\016\n\006act" +
      "ive\030\006 \001(\010\022$\n\004hand\030\007 \001(\0132\026.poker.networki" +
      "ng.Hand\022\023\n\013major_score\030\010 \001(\005\022\023\n\013minor_sc" +
      "ore\030\t \001(\005\"-\n\004Hand\022%\n\005cards\030\001 \003(\0132\026.poker" +
      ".networking.Card\"(\n\005Color\022\t\n\001r\030\001 \001(\005\022\t\n\001" +
      "g\030\002 \001(\005\022\t\n\001b\030\003 \001(\005\"\007\n\005Empty\"\251\001\n\010GameData" +
      "\022\r\n\005round\030\001 \001(\005\022%\n\005river\030\002 \003(\0132\026.poker.n" +
      "etworking.Card\022\013\n\003bet\030\003 \001(\005\022\023\n\013table_mon" +
      "ey\030\004 \001(\005\022\014\n\004anti\030\005 \001(\005\022)\n\007players\030\006 \003(\0132" +
      "\030.poker.networking.Player\022\014\n\004turn\030\007 \001(\005\"" +
      "\"\n\004Card\022\014\n\004suit\030\001 \001(\005\022\014\n\004rank\030\002 \001(\0052\337\001\n\005" +
      "Poker\022M\n\nPlayerJoin\022\035.poker.networking.J" +
      "oinRequest\032\036.poker.networking.JoinRespon" +
      "se\"\000\022D\n\013GetGameData\022\027.poker.networking.E" +
      "mpty\032\032.poker.networking.GameData\"\000\022A\n\nSe" +
      "ndChoice\022\030.poker.networking.Choice\032\027.pok" +
      "er.networking.Empty\"\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_poker_networking_Choice_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_poker_networking_Choice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_Choice_descriptor,
        new java.lang.String[] { "Id", "Choice", "NewBet", });
    internal_static_poker_networking_JoinRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_poker_networking_JoinRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_JoinRequest_descriptor,
        new java.lang.String[] { "PlayerName", "Ip", });
    internal_static_poker_networking_JoinResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_poker_networking_JoinResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_JoinResponse_descriptor,
        new java.lang.String[] { "Response", "Player", });
    internal_static_poker_networking_Player_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_poker_networking_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_Player_descriptor,
        new java.lang.String[] { "Name", "Color", "Id", "Ip", "Money", "Active", "Hand", "MajorScore", "MinorScore", });
    internal_static_poker_networking_Hand_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_poker_networking_Hand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_Hand_descriptor,
        new java.lang.String[] { "Cards", });
    internal_static_poker_networking_Color_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_poker_networking_Color_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_Color_descriptor,
        new java.lang.String[] { "R", "G", "B", });
    internal_static_poker_networking_Empty_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_poker_networking_Empty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_Empty_descriptor,
        new java.lang.String[] { });
    internal_static_poker_networking_GameData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_poker_networking_GameData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_GameData_descriptor,
        new java.lang.String[] { "Round", "River", "Bet", "TableMoney", "Anti", "Players", "Turn", });
    internal_static_poker_networking_Card_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_poker_networking_Card_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_poker_networking_Card_descriptor,
        new java.lang.String[] { "Suit", "Rank", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
